\hypertarget{classinstall}{\section{install Class Reference}
\label{classinstall}\index{install@{install}}
}
\subsection*{Public Member Functions}
\begin{DoxyCompactItemize}
\item 
\hyperlink{classinstall_a6a8bcb2f7b567c588f4a474d46804440}{install} ()
\item 
\hyperlink{classinstall_a4e720dd6e62b63da8033cecf60d5eaed}{check\-\_\-directory\-\_\-permission} (\$mode, \$sub)
\item 
\hyperlink{classinstall_a27e554353c8f7b9eef9bc401f11765cf}{ask\-\_\-database\-\_\-name} (\$mode, \$sub)
\end{DoxyCompactItemize}
\subsection*{Private Member Functions}
\begin{DoxyCompactItemize}
\item 
\hyperlink{classinstall_a8b2e00c7cc9a5031e9c98b4b6aa2c035}{setup\-\_\-database} ()
\item 
\hyperlink{classinstall_a7d4d4748cd5c10e21c951a75e5a55f10}{install\-Tables} ()
\end{DoxyCompactItemize}


\subsection{Detailed Description}


Definition at line 11 of file install.\-php.



\subsection{Member Function Documentation}
\hypertarget{classinstall_a27e554353c8f7b9eef9bc401f11765cf}{\index{install@{install}!ask\-\_\-database\-\_\-name@{ask\-\_\-database\-\_\-name}}
\index{ask\-\_\-database\-\_\-name@{ask\-\_\-database\-\_\-name}!install@{install}}
\subsubsection[{ask\-\_\-database\-\_\-name}]{\setlength{\rightskip}{0pt plus 5cm}install\-::ask\-\_\-database\-\_\-name (
\begin{DoxyParamCaption}
\item[{}]{\$mode, }
\item[{}]{\$sub}
\end{DoxyParamCaption}
)}}\label{classinstall_a27e554353c8f7b9eef9bc401f11765cf}
This function is used ask the user about the database details 
\begin{DoxyParams}[1]{Parameters}
string & {\em \$mode} & Describes which phase is currently running \\
\hline
string & {\em \$sub} & Describes which part is running of the phase \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
null 
\end{DoxyReturn}


Definition at line 118 of file install.\-php.


\begin{DoxyCode}
                                            \{
        global $template, $db;
        $sub = ($sub == null) ? 1 : $sub;
        \textcolor{keywordflow}{if} ($sub == 1) \{
            $template->header();
            $template->display(\textcolor{stringliteral}{"install.ask\_database\_details.tpl"});
        \} elseif ($sub == 2) \{
            $host = $\_POST[\textcolor{stringliteral}{'database\_host'}];
            $username = $\_POST[\textcolor{stringliteral}{'database\_username'}];
            $password = $\_POST[\textcolor{stringliteral}{'database\_password'}];
            $database = $\_POST[\textcolor{stringliteral}{'database\_name'}];

            \textcolor{keywordflow}{if} (empty($host) || empty($username) || empty($password) || empty(
      $database)) \{
                $template->header();
                $template->assign(array(\textcolor{stringliteral}{"error"} => 1,
                    \textcolor{stringliteral}{"message"} => \textcolor{stringliteral}{"Form not completed. Please complete the form"}
      ));
                $template->display(\textcolor{stringliteral}{"install.ask\_database\_details.tpl"});
                \textcolor{keywordflow}{return};
            \}

            \textcolor{comment}{//Connect to database}
            $db->connect($host, $username, $password);

            \textcolor{comment}{//Create Database}
            $db->query(\textcolor{stringliteral}{"CREATE DATABASE if not exists $database"});

            \textcolor{comment}{//Select The given database}
            $db->select\_db($database);

            \textcolor{comment}{//Setup basic database}
            $this->\hyperlink{classinstall_a8b2e00c7cc9a5031e9c98b4b6aa2c035}{setup\_database}();

            \textcolor{comment}{//Now create the config.php file save it}
            $file = fopen(\textcolor{stringliteral}{"config.php"}, \textcolor{stringliteral}{"w+"});
            \textcolor{keywordflow}{if} (!$file) \{
                trigger\_error(\textcolor{stringliteral}{"Error opening or creating config.php file"}, 
      E\_USER\_ERROR);
            \}

            $data = \textcolor{stringliteral}{"<?php\(\backslash\)n\(\backslash\)$config['host']='$host';}
\textcolor{stringliteral}{                    \(\backslash\)n\(\backslash\)$config['username']='$username';}
\textcolor{stringliteral}{                    \(\backslash\)n\(\backslash\)$config['password']='$password';}
\textcolor{stringliteral}{                    \(\backslash\)n\(\backslash\)$config['database']='$database';}
\textcolor{stringliteral}{                    \(\backslash\)n?>"};

            $wr = fwrite($file, $data);
            fclose($file);

            \textcolor{comment}{//Set file permission to 0644, Never leave this 0}
            \textcolor{keywordflow}{if} (!chmod(\textcolor{stringliteral}{"config.php"}, 0644)) \{
                \textcolor{comment}{//Read and write for the owner and read for everyone else}
                trigger\_error(\textcolor{stringliteral}{"Cannot set config.php permissions"}, E\_USER\_ERROR
      );

                \textcolor{comment}{//Check if permissions have been successfull applied or not}
                \textcolor{keywordflow}{if} (!is\_readable(\textcolor{stringliteral}{"config.php"})) \{
                    trigger\_error(\textcolor{stringliteral}{"Wrong config.php permissions. Please give
       config.php file 644 permission. <br> Use the Following command<br>$ chmod 644
       config.php"}, E\_USER\_ERROR);
                \}
            \}

            $template->display(\textcolor{stringliteral}{"database\_success.tpl"});
        \}
    \}
\end{DoxyCode}
\hypertarget{classinstall_a4e720dd6e62b63da8033cecf60d5eaed}{\index{install@{install}!check\-\_\-directory\-\_\-permission@{check\-\_\-directory\-\_\-permission}}
\index{check\-\_\-directory\-\_\-permission@{check\-\_\-directory\-\_\-permission}!install@{install}}
\subsubsection[{check\-\_\-directory\-\_\-permission}]{\setlength{\rightskip}{0pt plus 5cm}install\-::check\-\_\-directory\-\_\-permission (
\begin{DoxyParamCaption}
\item[{}]{\$mode, }
\item[{}]{\$sub}
\end{DoxyParamCaption}
)}}\label{classinstall_a4e720dd6e62b63da8033cecf60d5eaed}
This function is used to check the required directories permission during the installation as Family\-Tree needs to create some config files which can only be possible if he has the permission   \$template 
\begin{DoxyParams}[1]{Parameters}
string & {\em \$mode} & \\
\hline
integer & {\em \$sub} & \\
\hline
\end{DoxyParams}


Definition at line 52 of file install.\-php.


\begin{DoxyCode}
                                                     \{
        global $template;
        $cache = \textcolor{keyword}{false};
        $compile = \textcolor{keyword}{false};
        $main = \textcolor{keyword}{false};

        \textcolor{comment}{//Check if directories are writable}
        \textcolor{comment}{//Template Cache directory}
        \textcolor{keywordflow}{if} (dir\_iswritable(\textcolor{stringliteral}{"template/cache"})) \{
            $cache = TRUE;
            $template->assign(\textcolor{stringliteral}{"cache"}, \textcolor{keyword}{true});
        \} \textcolor{keywordflow}{else} \textcolor{keywordflow}{if} (!file\_exists(\textcolor{stringliteral}{"template/cache"})) \{
            \textcolor{comment}{//try making the directory if possible}
            @mkdir(\textcolor{stringliteral}{"template/cache"}, 0755);
        \}

        \textcolor{comment}{//Template compile directory}
        \textcolor{keywordflow}{if} (dir\_iswritable(\textcolor{stringliteral}{"template/compile"})) \{
            $compile = \textcolor{keyword}{true};
            $template->assign(\textcolor{stringliteral}{"compile"}, \textcolor{keyword}{true});
        \} \textcolor{keywordflow}{else} \textcolor{keywordflow}{if} (!file\_exists(\textcolor{stringliteral}{"template/compile"})) \{
            \textcolor{comment}{//Trying to make the directory myself here}
            @mkdir(\textcolor{stringliteral}{"template/cache"}, 0755);
        \}

        \textcolor{comment}{//Family Tree main directory}
        $template->assign(\textcolor{stringliteral}{"dir"}, \textcolor{stringliteral}{"config.php"});
        \textcolor{keywordflow}{if} (dir\_iswritable(\textcolor{stringliteral}{"."})) \{
            $main = \textcolor{keyword}{true};
            $template->assign(\textcolor{stringliteral}{"main"}, TRUE);
        \}

        \textcolor{keywordflow}{if} ($cache && $compile && $main) \{
            header(\textcolor{stringliteral}{"Location: index.php?mode=ask\_database\_name"});
        \}

        \textcolor{comment}{//Apparently we cannot use template as we have not write permission in
       compile directory}
        \textcolor{comment}{//So read the tpl file and output it as it is.}
        \textcolor{comment}{// We are using @ just in case we don't have permission to read}
        $output = file\_get\_contents(\textcolor{stringliteral}{"html/install.directory\_check.tpl"});

        \textcolor{keywordflow}{if} ($output === \textcolor{keyword}{false}) \{
            \textcolor{comment}{//We also cannot read that file so just print a simple plain
       message}
            echo \textcolor{stringliteral}{"Please give permission to the root folder i.e. ./FamilyTree
       <br /> The template cache folder (template/cache) <br /> The template compile
       folder (template/compile) and refresh this page"};
            \textcolor{keywordflow}{return} \textcolor{keyword}{false};
        \}

        echo $output;

        \textcolor{keywordflow}{if} (!$cache) \{
            echo \textcolor{stringliteral}{"<h4>Cannot write in template/cache folder</h4><br>"};
        \}
        \textcolor{keywordflow}{if} (!$compile) \{
            echo \textcolor{stringliteral}{"<h4>Cannot write in template/compile folder</h4><br>"};
        \}
        \textcolor{keywordflow}{if} (!$main) \{
            echo \textcolor{stringliteral}{"<h4>Cannot write in FamilyTree's Directory</h4><br>"};
        \}
    \}
\end{DoxyCode}
\hypertarget{classinstall_a6a8bcb2f7b567c588f4a474d46804440}{\index{install@{install}!install@{install}}
\index{install@{install}!install@{install}}
\subsubsection[{install}]{\setlength{\rightskip}{0pt plus 5cm}install\-::install (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
)}}\label{classinstall_a6a8bcb2f7b567c588f4a474d46804440}
This function is used to start the installation.  string \$mode  integer \$sub \begin{DoxyReturn}{Returns}
null 
\end{DoxyReturn}


Definition at line 19 of file install.\-php.


\begin{DoxyCode}
                       \{
        global $mode, $sub;
        \textcolor{comment}{//make sure to run this only if database is not installed}
        \textcolor{comment}{//So check if database is installed}
        \textcolor{keywordflow}{if} (!empty($config) and file\_exists(\textcolor{stringliteral}{"../config.php"})) \{
            \textcolor{comment}{//its installed! Return to index.php}
            header(\textcolor{stringliteral}{"Location:../index.php"});
        \}

        \textcolor{comment}{//Reached here huh? Installtion will begin now}
        \textcolor{comment}{//Check mode and perform actions}
        \textcolor{keywordflow}{switch} ($mode) \{
            \textcolor{comment}{//All the other option will be above ask\_database\_name as it is
       also the default}


            \textcolor{keywordflow}{case} \textcolor{stringliteral}{"ask\_database\_name"}:
                $this->\hyperlink{classinstall_a27e554353c8f7b9eef9bc401f11765cf}{ask\_database\_name}($mode, $sub);
                \textcolor{keywordflow}{break};
            \textcolor{keywordflow}{case} \textcolor{stringliteral}{"check\_directory\_permission"}:
            \textcolor{keywordflow}{default} :
                $this->\hyperlink{classinstall_a4e720dd6e62b63da8033cecf60d5eaed}{check\_directory\_permission}(
      $mode, $sub);
                \textcolor{keywordflow}{break};
        \}
    \}
\end{DoxyCode}
\hypertarget{classinstall_a7d4d4748cd5c10e21c951a75e5a55f10}{\index{install@{install}!install\-Tables@{install\-Tables}}
\index{install\-Tables@{install\-Tables}!install@{install}}
\subsubsection[{install\-Tables}]{\setlength{\rightskip}{0pt plus 5cm}install\-::install\-Tables (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
)\hspace{0.3cm}{\ttfamily [private]}}}\label{classinstall_a7d4d4748cd5c10e21c951a75e5a55f10}
This function is used install the tables in the database Returns true if all the tables were installed successfully else false   \$db Ths instance of the db class \begin{DoxyReturn}{Returns}
boolean 
\end{DoxyReturn}


Definition at line 199 of file install.\-php.


\begin{DoxyCode}
                                     \{
        global $db;
        $family = $db->query(\textcolor{stringliteral}{"Create table family (}
\textcolor{stringliteral}{            id int(11) not null primary key auto\_increment,}
\textcolor{stringliteral}{            family\_name mediumtext not null,}
\textcolor{stringliteral}{            ts int(11) not null )"});


        $member = $db->query(\textcolor{stringliteral}{"create table member (}
\textcolor{stringliteral}{            id int(11) null primary key auto\_increment,}
\textcolor{stringliteral}{            membername mediumtext not null,}
\textcolor{stringliteral}{            username mediumtext default null,}
\textcolor{stringliteral}{            password mediumtext default null,}
\textcolor{stringliteral}{            sonof int(11) null default null,}
\textcolor{stringliteral}{            profilepic varchar(255) default 'common.png',}
\textcolor{stringliteral}{            dob int(11) default null,}
\textcolor{stringliteral}{            gender int(1) default 0,}
\textcolor{stringliteral}{            relationship\_status int(11) default 0,}
\textcolor{stringliteral}{            gaon mediumtext default null,}
\textcolor{stringliteral}{            related\_to int(11) null default null,}
\textcolor{stringliteral}{            emailid text default null,}
\textcolor{stringliteral}{            alive int(1) default 0,}
\textcolor{stringliteral}{            aboutme longtext default null,}
\textcolor{stringliteral}{            lastlogin int(11) default null,}
\textcolor{stringliteral}{            joined int(11) default null,}
\textcolor{stringliteral}{            approved int(1) default 0,}
\textcolor{stringliteral}{            tokenforact text default null,}
\textcolor{stringliteral}{            dontshow int(1) default 0,}
\textcolor{stringliteral}{            family\_id int(11) default 1,}
\textcolor{stringliteral}{            foreign key (family\_id) references family(id),}
\textcolor{stringliteral}{            foreign key (related\_to) references member(id) );"});

        $feedback = $db->query(\textcolor{stringliteral}{"create table feedback (}
\textcolor{stringliteral}{            id int(11) not null primary key auto\_increment,}
\textcolor{stringliteral}{            user\_name text not null,}
\textcolor{stringliteral}{            user\_emailid text not null,}
\textcolor{stringliteral}{            feedback\_text text not null,}
\textcolor{stringliteral}{            seen int(1) default 0 );"});

        $joinrequest = $db->query(\textcolor{stringliteral}{"create table joinrequest (}
\textcolor{stringliteral}{            id int(11) not null primary key auto\_increment,}
\textcolor{stringliteral}{            formember int(11) not null,}
\textcolor{stringliteral}{            pic text default null,}
\textcolor{stringliteral}{            personalmessage text default null,}
\textcolor{stringliteral}{            emailid text not null,}
\textcolor{stringliteral}{            tokenforact varchar(20) default null,}
\textcolor{stringliteral}{            approved int(1) default 0,}
\textcolor{stringliteral}{            foreign key(formember) references member(id) );"});

        $suggested\_info = $db->query(\textcolor{stringliteral}{"create table suggested\_info (}
\textcolor{stringliteral}{            id int(11) not null primary key auto\_increment,}
\textcolor{stringliteral}{            typesuggest mediumtext not null,}
\textcolor{stringliteral}{            new\_value text default null,}
\textcolor{stringliteral}{            old\_value text default null,}
\textcolor{stringliteral}{            suggested\_by int(11) not null,}
\textcolor{stringliteral}{            suggested\_to int(11) not null,}
\textcolor{stringliteral}{            ts int(11) not null,}
\textcolor{stringliteral}{            approved int(1) default 0,}
\textcolor{stringliteral}{            foreign key(from) references member(id),}
\textcolor{stringliteral}{            foreign key(to) references member(id) );"});

        $suggest\_approved = $db->query(\textcolor{stringliteral}{"create table suggest\_approved (}
\textcolor{stringliteral}{            id int(11) not null primary key auto\_increment,}
\textcolor{stringliteral}{            suggest\_id int(11) not null,}
\textcolor{stringliteral}{            user\_id int(11) not null,}
\textcolor{stringliteral}{            action int(2) not null,}
\textcolor{stringliteral}{            foreign key (suggest\_id) references suggested\_info(id),}
\textcolor{stringliteral}{            foreign key (user\_id) references member(id) );"});

        $dasfamily = $db->query(\textcolor{stringliteral}{"insert into family (family\_name,ts)
       values('Das Family',"} . time() . \textcolor{stringliteral}{");"});


        \textcolor{comment}{//Now the data that we already have}
        $memberdata = file\_get\_contents(\textcolor{stringliteral}{"member\_data.sql"});

        $memberdata\_sql = $db->query($memberdata);

        \textcolor{keywordflow}{return} $member && $feedback && $joinrequest && $suggested\_info
                && $suggest\_approved && $memberdata\_sql && $family && 
      $dasfamily;
    \}
\end{DoxyCode}
\hypertarget{classinstall_a8b2e00c7cc9a5031e9c98b4b6aa2c035}{\index{install@{install}!setup\-\_\-database@{setup\-\_\-database}}
\index{setup\-\_\-database@{setup\-\_\-database}!install@{install}}
\subsubsection[{setup\-\_\-database}]{\setlength{\rightskip}{0pt plus 5cm}install\-::setup\-\_\-database (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
)\hspace{0.3cm}{\ttfamily [private]}}}\label{classinstall_a8b2e00c7cc9a5031e9c98b4b6aa2c035}
This is a private function used to setup the database   \$db 

Definition at line 184 of file install.\-php.


\begin{DoxyCode}
                                      \{
        global $db;
        \textcolor{comment}{//Install the tables}

        \textcolor{keywordflow}{if} (!$this->\hyperlink{classinstall_a7d4d4748cd5c10e21c951a75e5a55f10}{installTables}()) \{
            trigger\_error(\textcolor{stringliteral}{"Cannot create Tables"}, E\_USER\_ERROR);
        \}
    \}
\end{DoxyCode}


The documentation for this class was generated from the following file\-:\begin{DoxyCompactItemize}
\item 
install/install.\-php\end{DoxyCompactItemize}
