<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Family Tree: vanshavali Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Family Tree
   &#160;<span id="projectnumber">0.2</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Class&#160;List</span></a></li>
      <li><a href="classes.html"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.html"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classvanshavali.html','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classvanshavali-members.html">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">vanshavali Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aee7778d3d1ccffd71859d14a811db6ee"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classvanshavali.html#aee7778d3d1ccffd71859d14a811db6ee">__construct</a> ()</td></tr>
<tr class="memitem:a0ae3b4be4f88572f7780304504c39dbc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classvanshavali.html#a0ae3b4be4f88572f7780304504c39dbc">addmember_explicit</a> ($membername, $gender, $familyid)</td></tr>
<tr class="memitem:a0e2dc92ebdd355f1e995976f79285d1b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classvanshavali.html#a0e2dc92ebdd355f1e995976f79285d1b">addfamily</a> ($name)</td></tr>
<tr class="memitem:a91783e3f043278513c32ec2cca7f4c15"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classvanshavali.html#a91783e3f043278513c32ec2cca7f4c15">getmember</a> ($id)</td></tr>
<tr class="memitem:a3de4f0b21ee02db0c12053d359543561"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classvanshavali.html#a3de4f0b21ee02db0c12053d359543561">register</a> ($details)</td></tr>
<tr class="memitem:aba5843e1d503de982e31f1366cef2abb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classvanshavali.html#aba5843e1d503de982e31f1366cef2abb">mail</a> ($template_name, $data, $to, $subject)</td></tr>
<tr class="memitem:a221c06bb6df817d86b784fddbada6855"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classvanshavali.html#a221c06bb6df817d86b784fddbada6855">createstruct</a> ($row)</td></tr>
<tr class="memitem:a9f7d7e7137457aefbbd85ac33c5c1372"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classvanshavali.html#a9f7d7e7137457aefbbd85ac33c5c1372">getchild</a> ($id)</td></tr>
<tr class="memitem:a3ff1ca4043648fa9961a6fe2c1f94087"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classvanshavali.html#a3ff1ca4043648fa9961a6fe2c1f94087">getwife</a> ($id)</td></tr>
<tr class="memitem:aaff3d01d67e94c2371c39adabf1aba1e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classvanshavali.html#aaff3d01d67e94c2371c39adabf1aba1e">getJson_new</a> ($familyid=1)</td></tr>
<tr class="memitem:adf31d7537f11e2235d6ffdcc7e8b11e7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classvanshavali.html#adf31d7537f11e2235d6ffdcc7e8b11e7">getchild_new</a> ($id)</td></tr>
<tr class="memitem:ac63d3c3e833350cc3af38d9ba335be4c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classvanshavali.html#ac63d3c3e833350cc3af38d9ba335be4c">getwife_new</a> ($id)</td></tr>
</table>
<a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>This the core Class of the Family Tree and contains function to manage it.</p>
<dl class="section author"><dt>Author</dt><dd>piyush </dd></dl>

<p>Definition at line <a class="el" href="vanshavali_8php_source.html#l00010">10</a> of file <a class="el" href="vanshavali_8php_source.html">vanshavali.php</a>.</p>
</div><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="aee7778d3d1ccffd71859d14a811db6ee"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vanshavali::__construct </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Constructor of the class </p>

<p>Definition at line <a class="el" href="vanshavali_8php_source.html#l00016">16</a> of file <a class="el" href="vanshavali_8php_source.html">vanshavali.php</a>.</p>
<div class="fragment"><div class="line">                                  {</div>
<div class="line">        </div>
<div class="line">    }</div>
</div><!-- fragment -->
</div>
</div>
<h2>Member Function Documentation</h2>
<a class="anchor" id="a0e2dc92ebdd355f1e995976f79285d1b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vanshavali::addfamily </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>$name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This function is used to add family in the Tree. Returns the ID of the new family created or returns false if any error occured   $db Instance of db class </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramtype">string</td><td class="paramname">$name</td><td>The name of the Family </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>integer ID of the new Family </dd></dl>

<p>Definition at line <a class="el" href="vanshavali_8php_source.html#l00047">47</a> of file <a class="el" href="vanshavali_8php_source.html">vanshavali.php</a>.</p>
<div class="fragment"><div class="line">                              {</div>
<div class="line">        global $db;</div>
<div class="line">        <span class="keywordflow">if</span> ($db-&gt;query(<span class="stringliteral">&quot;insert into family (family_name,ts) values(&#39;$name Family&#39;,&quot;</span> . time() . <span class="stringliteral">&quot;)&quot;</span>)) {</div>
<div class="line">            <span class="keywordflow">return</span> mysql_insert_id();</div>
<div class="line">        } <span class="keywordflow">else</span> {</div>
<div class="line">            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">        }</div>
<div class="line">    }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a0ae3b4be4f88572f7780304504c39dbc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vanshavali::addmember_explicit </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>$membername</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>$gender</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>$familyid</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This special function is used to add member to the Tree without using any of the member class Returns the ID of the new member else false if any error occurred   $db Instance of the db class </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramtype">string</td><td class="paramname">$membername</td><td>The name of the new member to be added </td></tr>
    <tr><td class="paramtype">integer</td><td class="paramname">$gender</td><td>The gender of the new member </td></tr>
    <tr><td class="paramtype">integer</td><td class="paramname">$familyid</td><td>The Family ID of the new member </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>integer ID of the new member created </dd></dl>

<p>Definition at line <a class="el" href="vanshavali_8php_source.html#l00030">30</a> of file <a class="el" href="vanshavali_8php_source.html">vanshavali.php</a>.</p>
<div class="fragment"><div class="line">                                                                 {</div>
<div class="line">        global $db;</div>
<div class="line">        <span class="keywordflow">if</span> ($db-&gt;query(<span class="stringliteral">&quot;insert into member (membername,gender,family_id) values (&#39;$membername&#39;,$gender,$familyid)&quot;</span>)) {</div>
<div class="line">            <span class="keywordflow">return</span> mysql_insert_id();</div>
<div class="line">        } <span class="keywordflow">else</span> {</div>
<div class="line">            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">        }</div>
<div class="line">    }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a221c06bb6df817d86b784fddbada6855"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vanshavali::createstruct </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>$row</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This function is used to used to create structure to used by JIT. It takes input the array of a row from member table and converts it into the JIT structure. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramtype">array</td><td class="paramname">$row</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>array </dd></dl>

<p>Definition at line <a class="el" href="vanshavali_8php_source.html#l00148">148</a> of file <a class="el" href="vanshavali_8php_source.html">vanshavali.php</a>.</p>
<div class="fragment"><div class="line">                                {</div>
<div class="line">        $obj = array();</div>
<div class="line">        $obj[<span class="stringliteral">&#39;id&#39;</span>] = $row[<span class="stringliteral">&quot;id&quot;</span>];</div>
<div class="line">        $obj[<span class="stringliteral">&#39;name&#39;</span>] = $row[<span class="stringliteral">&#39;membername&#39;</span>];</div>
<div class="line">        $obj[<span class="stringliteral">&#39;data&#39;</span>] = array(</div>
<div class="line">            <span class="stringliteral">&quot;dob&quot;</span> =&gt; ($row[<span class="stringliteral">&#39;dob&#39;</span>] ? strftime(<span class="stringliteral">&quot;%d/%m/%Y&quot;</span>, $row[<span class="stringliteral">&#39;dob&#39;</span>]) : <span class="stringliteral">&quot;&quot;</span>),</div>
<div class="line">            <span class="stringliteral">&quot;relationship_status&quot;</span> =&gt; ($row[<span class="stringliteral">&#39;relationship_status&#39;</span>] == 0 ? <span class="stringliteral">&quot;Single&quot;</span> :</div>
<div class="line">                    <span class="stringliteral">&quot;Married&quot;</span>),</div>
<div class="line">            <span class="stringliteral">&quot;relationship_status_id&quot;</span> =&gt; $row[<span class="stringliteral">&#39;relationship_status&#39;</span>],</div>
<div class="line">            <span class="stringliteral">&quot;alive&quot;</span> =&gt; ($row[<span class="stringliteral">&#39;alive&#39;</span>] == 0 ? <span class="stringliteral">&quot;Deceased&quot;</span> : <span class="stringliteral">&quot;Living&quot;</span>),</div>
<div class="line">            <span class="stringliteral">&quot;gender&quot;</span> =&gt; $row[<span class="stringliteral">&#39;gender&#39;</span>],</div>
<div class="line">            <span class="stringliteral">&quot;alive_id&quot;</span> =&gt; $row[<span class="stringliteral">&#39;alive&#39;</span>],</div>
<div class="line">            <span class="stringliteral">&#39;image&#39;</span> =&gt; empty($row[<span class="stringliteral">&#39;profilepic&#39;</span>]) ? <span class="stringliteral">&quot;common.png&quot;</span> : $row[<span class="stringliteral">&#39;profilepic&#39;</span>],</div>
<div class="line">            <span class="stringliteral">&#39;familyid&#39;</span> =&gt; $row[<span class="stringliteral">&#39;family_id&#39;</span>]</div>
<div class="line">        );</div>
<div class="line">        <span class="keywordflow">return</span> $obj;</div>
<div class="line">    }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a9f7d7e7137457aefbbd85ac33c5c1372"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vanshavali::getchild </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>$id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This function is used to get the child of the given member to be fetched to the JIT. It fetches the details of the given member from the database and uses <a class="el" href="classvanshavali.html#a221c06bb6df817d86b784fddbada6855">createstruct()</a> to convert it into JIT structure.   $db Instance of the db class </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramtype">integer</td><td class="paramname">$id</td><td>Ihe of the member whose children are to be fetched </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>array </dd></dl>

<p>Definition at line <a class="el" href="vanshavali_8php_source.html#l00174">174</a> of file <a class="el" href="vanshavali_8php_source.html">vanshavali.php</a>.</p>
<div class="fragment"><div class="line">                           {</div>
<div class="line">        global $db;</div>
<div class="line">        $finalarray = array();</div>
<div class="line">        $query = $db-&gt;query(<span class="stringliteral">&quot;select * from member where sonof=$id and dontshow=0&quot;</span>);</div>
<div class="line">        <span class="keywordflow">while</span> ($row = $db-&gt;fetch($query)) {</div>
<div class="line">            $obj = $this-&gt;<a class="code" href="classvanshavali.html#a221c06bb6df817d86b784fddbada6855">createstruct</a>($row);</div>
<div class="line">            $obj[<span class="stringliteral">&#39;children&#39;</span>] = $this-&gt;<a class="code" href="classvanshavali.html#a3ff1ca4043648fa9961a6fe2c1f94087">getwife</a>($row[<span class="stringliteral">&#39;id&#39;</span>]);</div>
<div class="line">            array_push($finalarray, $obj);</div>
<div class="line">        }</div>
<div class="line">        <span class="keywordflow">return</span> $finalarray;</div>
<div class="line">    }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="adf31d7537f11e2235d6ffdcc7e8b11e7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vanshavali::getchild_new </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>$id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This function is used to generate JSON structure to be used in JIT of all children and subchildren under the passed member   $db Instance of the db class </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramtype">integer</td><td class="paramname">$id</td><td>ID of the member whose children are to be fetched </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>array </dd></dl>

<p>Definition at line <a class="el" href="vanshavali_8php_source.html#l00251">251</a> of file <a class="el" href="vanshavali_8php_source.html">vanshavali.php</a>.</p>
<div class="fragment"><div class="line">                               {</div>
<div class="line">        global $db;</div>
<div class="line">        $finalarray = array();</div>
<div class="line">        $query = $db-&gt;query(<span class="stringliteral">&quot;select * from member where sonof=$id and dontshow=0&quot;</span>);</div>
<div class="line">        <span class="keywordflow">while</span> ($row = $db-&gt;fetch($query)) {</div>
<div class="line">            $obj = $this-&gt;infovisstruct($row);</div>
<div class="line">            $obj[<span class="stringliteral">&#39;children&#39;</span>] = $this-&gt;<a class="code" href="classvanshavali.html#a3ff1ca4043648fa9961a6fe2c1f94087">getwife</a>($row[<span class="stringliteral">&#39;id&#39;</span>]);</div>
<div class="line">            array_push($finalarray, $obj);</div>
<div class="line">        }</div>
<div class="line">        <span class="keywordflow">return</span> $finalarray;</div>
<div class="line">    }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aaff3d01d67e94c2371c39adabf1aba1e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vanshavali::getJson_new </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>$familyid</em> = <code>1</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This function is used to get the members in JSON format to be used with the JIT   $db Instance of db class </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramtype">integer</td><td class="paramname">$familyid</td><td>The ID of the family whose member are to be shown By default members of Family 1 are shown </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>array|boolean </dd></dl>

<p>Definition at line <a class="el" href="vanshavali_8php_source.html#l00222">222</a> of file <a class="el" href="vanshavali_8php_source.html">vanshavali.php</a>.</p>
<div class="fragment"><div class="line">                                        {</div>
<div class="line"></div>
<div class="line">        global $db;</div>
<div class="line">        $finalarray = array();</div>
<div class="line">        $query = $db-&gt;query(<span class="stringliteral">&quot;select * from member where sonof is null and dontshow=0 and gender=0&quot;</span>);</div>
<div class="line">        <span class="comment">//Loop through all the members and feed the row data to a function</span></div>
<div class="line">        <span class="comment">//Loop will filter the data according to the gender and return</span></div>
<div class="line">        <span class="comment">//Keep adding the information to a final array</span></div>
<div class="line">        $row = $db-&gt;fetch($query);</div>
<div class="line"></div>
<div class="line">        <span class="comment">//Now feed the row to function and in return get the array interface</span></div>
<div class="line">        <span class="keywordflow">if</span> (is_array($row)) {</div>
<div class="line">            $obj = $this-&gt;infovisstruct($row);</div>
<div class="line">            <span class="comment">//$obj[&#39;children&#39;] = $this-&gt;getwife($row[&#39;id&#39;]);</span></div>
<div class="line"></div>
<div class="line">            array_push($finalarray, $obj);</div>
<div class="line">            <span class="keywordflow">return</span> $finalarray;</div>
<div class="line">        } <span class="keywordflow">else</span> {</div>
<div class="line">            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">        }</div>
<div class="line">    }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a91783e3f043278513c32ec2cca7f4c15"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vanshavali::getmember </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>$id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This function is used get the details about a member.   $db Instance of the db class </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramtype">integer</td><td class="paramname">$id</td><td>ID of the member whose details is to be fetched </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

<p>Definition at line <a class="el" href="vanshavali_8php_source.html#l00062">62</a> of file <a class="el" href="vanshavali_8php_source.html">vanshavali.php</a>.</p>
<div class="fragment"><div class="line">                            {</div>
<div class="line">        global $db;</div>
<div class="line">        $query = $db-&gt;query(<span class="stringliteral">&quot;select * from member where id=$id&quot;</span>);</div>
<div class="line">        $ret = $db-&gt;fetch($query);</div>
<div class="line">        $member = <span class="keyword">new</span> <a class="code" href="classmember.html">member</a>($ret[<span class="stringliteral">&#39;id&#39;</span>]);</div>
<div class="line">        <span class="keywordflow">return</span> $member;</div>
<div class="line">    }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a3ff1ca4043648fa9961a6fe2c1f94087"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vanshavali::getwife </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>$id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This function is used to get the wife of the given member to be fetched into JIT. It fetches the details of the given member from the database and uses <a class="el" href="classvanshavali.html#a221c06bb6df817d86b784fddbada6855">createstruct()</a> to convert it into JIT structure.   $db Instance of db class </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramtype">integer</td><td class="paramname">$id</td><td>ID of the member whose wife is to be fetched </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>array|null </dd></dl>

<p>Definition at line <a class="el" href="vanshavali_8php_source.html#l00194">194</a> of file <a class="el" href="vanshavali_8php_source.html">vanshavali.php</a>.</p>
<div class="fragment"><div class="line">                          {</div>
<div class="line">        global $db;</div>
<div class="line">        $finalarray = array();</div>
<div class="line">        $row = $db-&gt;get(<span class="stringliteral">&quot;select * from member where id in (select related_to from member where id=$id)&quot;</span>);</div>
<div class="line">        $obj = array();</div>
<div class="line">        <span class="comment">// Space Tree Object if he has a wife</span></div>
<div class="line">        <span class="keywordflow">if</span> ($row) {</div>
<div class="line">            $obj = $this-&gt;<a class="code" href="classvanshavali.html#a221c06bb6df817d86b784fddbada6855">createstruct</a>($row);</div>
<div class="line">            $obj[<span class="stringliteral">&#39;children&#39;</span>] = $this-&gt;<a class="code" href="classvanshavali.html#a9f7d7e7137457aefbbd85ac33c5c1372">getchild</a>($id);</div>
<div class="line">            array_push($finalarray, $obj);</div>
<div class="line">            <span class="keywordflow">return</span> $finalarray;</div>
<div class="line">        } <span class="keywordflow">else</span> {</div>
<div class="line">            <span class="keywordflow">return</span> NULL;</div>
<div class="line">        }</div>
<div class="line">    }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ac63d3c3e833350cc3af38d9ba335be4c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vanshavali::getwife_new </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>$id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This function is used to generate JSON structure to be used in JIT of the wife of the passed member   $db Instance of db class </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramtype">integer</td><td class="paramname">$id</td><td>ID of the member whose wife is to be fetched </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>array|null </dd></dl>

<p>Definition at line <a class="el" href="vanshavali_8php_source.html#l00270">270</a> of file <a class="el" href="vanshavali_8php_source.html">vanshavali.php</a>.</p>
<div class="fragment"><div class="line">                              {</div>
<div class="line">        global $db;</div>
<div class="line">        $finalarray = array();</div>
<div class="line">        $row = $db-&gt;get(<span class="stringliteral">&quot;select * from member where id in (select related_to from member where id=$id)&quot;</span>);</div>
<div class="line">        $obj = array();</div>
<div class="line">        <span class="comment">// Space Tree Object if he has a wife</span></div>
<div class="line">        <span class="keywordflow">if</span> ($row) {</div>
<div class="line">            $obj = $this-&gt;infovisstruct($row);</div>
<div class="line">            $obj[<span class="stringliteral">&#39;children&#39;</span>] = $this-&gt;<a class="code" href="classvanshavali.html#a9f7d7e7137457aefbbd85ac33c5c1372">getchild</a>($id);</div>
<div class="line">            array_push($finalarray, $obj);</div>
<div class="line">            <span class="keywordflow">return</span> $finalarray;</div>
<div class="line">        } <span class="keywordflow">else</span> {</div>
<div class="line">            <span class="keywordflow">return</span> NULL;</div>
<div class="line">        }</div>
<div class="line">    }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aba5843e1d503de982e31f1366cef2abb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vanshavali::mail </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>$template_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>$data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>$to</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>$subject</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This function is used to send a mail to an emailID. Returns false on error   $template Instance of template class </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramtype">string</td><td class="paramname">$template_name</td><td>The name of the mail template to be used in the mail </td></tr>
    <tr><td class="paramtype">array</td><td class="paramname">$data</td><td>The variables needed by the template used in the mail </td></tr>
    <tr><td class="paramtype">string</td><td class="paramname">$to</td><td>EmailID of the Recipent </td></tr>
    <tr><td class="paramtype">string</td><td class="paramname">$subject</td><td>The subject of the Mail </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>boolean </dd></dl>

<p>Definition at line <a class="el" href="vanshavali_8php_source.html#l00122">122</a> of file <a class="el" href="vanshavali_8php_source.html">vanshavali.php</a>.</p>
<div class="fragment"><div class="line">                                                        {</div>
<div class="line">        global $template;</div>
<div class="line">        <span class="comment">//Add Global variable of domain</span></div>
<div class="line">        $user_email = <span class="stringliteral">&quot;me@vanshavali.co.cc&quot;</span>;</div>
<div class="line"></div>
<div class="line">        <span class="comment">//Fetch body from template</span></div>
<div class="line">        $template-&gt;assign($data);</div>
<div class="line">        $body = $template-&gt;fetch($template_name);</div>
<div class="line"></div>
<div class="line">        <span class="comment">//Mail Headers</span></div>
<div class="line">        $headers = <span class="stringliteral">&quot;From: $user_email\r\n&quot;</span>;</div>
<div class="line">        $headers .= <span class="stringliteral">&quot;Return-Path: $to\r\n&quot;</span>;</div>
<div class="line">        $headers .= <span class="stringliteral">&quot;X-Mailer: PHP/&quot;</span> . phpversion() . <span class="stringliteral">&quot;\r\n&quot;</span>;</div>
<div class="line">        $headers .= <span class="stringliteral">&#39;MIME-Version: 1.0&#39;</span> . <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line">        $headers .= <span class="stringliteral">&#39;Content-type: text/html; UTF-8&#39;</span> . <span class="stringliteral">&quot;\r\n&quot;</span>;</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">return</span> <a class="code" href="classvanshavali.html#aba5843e1d503de982e31f1366cef2abb">mail</a>($to, $subject, $body, $headers);</div>
<div class="line">    }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a3de4f0b21ee02db0c12053d359543561"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vanshavali::register </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>$details</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This function is used to register a user in Family Tree. Returns false on error.   $db Instance of db class   $user Instance of user class </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramtype">array</td><td class="paramname">$details</td><td>Array containing details about the new member </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>boolean </dd></dl>

<p>Definition at line <a class="el" href="vanshavali_8php_source.html#l00078">78</a> of file <a class="el" href="vanshavali_8php_source.html">vanshavali.php</a>.</p>
<div class="fragment"><div class="line">                                {</div>
<div class="line">        global $db, $user;</div>
<div class="line">        </div>
<div class="line">        <span class="comment">//convert the password to md5 hash</span></div>
<div class="line">        $details[1] = md5($details[1]);</div>
<div class="line">        </div>
<div class="line">        <span class="comment">//The token for activation</span></div>
<div class="line">        $token = $user-&gt;generate_token();</div>
<div class="line"></div>
<div class="line">        <span class="comment">//Sql Statement</span></div>
<div class="line">        <span class="keywordflow">if</span> (!empty($details[8])) { <span class="comment">//If member is not already connected to Family Tree then insert else update</span></div>
<div class="line">            $sql = <span class="stringliteral">&quot;update member set membername=&#39;$details[9]&#39;,username=&#39;$details[0]&#39;,password=&#39;$details[1]&#39;,dob=$details[2],gender=$details[3],relationship_status=$details[4],gaon=&#39;$details[5]&#39;,</span></div>
<div class="line"><span class="stringliteral">    emailid=&#39;$details[6]&#39;,alive=1,aboutme=&#39;$details[7]&#39;,joined=&quot;</span> . time() . <span class="stringliteral">&quot;,tokenforact=&#39;$token&#39; where id=$details[8]&quot;</span>;</div>
<div class="line">        } <span class="keywordflow">else</span> {</div>
<div class="line">            $sql = <span class="stringliteral">&quot;insert into member (membername,username,password,dob,gender,relationship_status,gaon,emailid,alive,aboutme,joined,tokenforact)</span></div>
<div class="line"><span class="stringliteral">                values(&#39;$details[9]&#39;,&#39;$details[0]&#39;,&#39;$details[1]&#39;,$details[2],$details[3],$details[4],&#39;$details[5]&#39;,&#39;$details[6]&#39;,1,&#39;$details[7]&#39;,&quot;</span> . time() . <span class="stringliteral">&quot;,&#39;$token&#39;)&quot;</span>;</div>
<div class="line">        }</div>
<div class="line">        <span class="comment">//Finally execute the sql</span></div>
<div class="line">        $ret = $db-&gt;query($sql);</div>
<div class="line"></div>
<div class="line">        <span class="comment">//Mail Options</span></div>
<div class="line">        $mail_options = array(</div>
<div class="line">            <span class="stringliteral">&#39;username&#39;</span> =&gt; $details[0],</div>
<div class="line">            <span class="stringliteral">&#39;email&#39;</span> =&gt; $details[6],</div>
<div class="line">            <span class="stringliteral">&#39;not_connected&#39;</span> =&gt; !empty($details[8]) ? <span class="keyword">true</span> : <span class="keyword">false</span></div>
<div class="line">        );</div>
<div class="line">        <span class="keywordflow">if</span> ($ret != <span class="keyword">false</span>) {</div>
<div class="line">            $this-&gt;<a class="code" href="classvanshavali.html#aba5843e1d503de982e31f1366cef2abb">mail</a>(<span class="stringliteral">&quot;mail.register.confirm.tpl&quot;</span>, $mail_options, $details[6], <span class="stringliteral">&#39;Welcome to Vanshavali | Email Confirmation&#39;</span>);</div>
<div class="line">            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">        } <span class="keywordflow">else</span> {</div>
<div class="line">            trigger_error(<span class="stringliteral">&quot;Cannot Connect to the database. Please try again by refreshing the page&quot;</span>, E_USER_ERROR);</div>
<div class="line">            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">        }</div>
<div class="line">    }</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>vanshavali/<a class="el" href="vanshavali_8php_source.html">vanshavali.php</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="classvanshavali.html">vanshavali</a></li>
    <li class="footer">Generated on Mon Jan 6 2014 23:07:00 for Family Tree by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.1.2 </li>
  </ul>
</div>
</body>
</html>
